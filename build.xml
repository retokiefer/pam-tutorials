<?xml version="1.0" encoding="UTF-8"?>
<project name="pam" default="all">


    <property file="build.properties"/>
    <!-- Uncomment the following property if no tests compilation is needed -->
    <!--
    <property name="skip.tests" value="true"/>
     -->

    <!-- Compiler options -->

    <property name="compiler.debug" value="on"/>
    <property name="compiler.generate.no.warnings" value="off"/>
    <property name="compiler.args" value=""/>
    <property name="compiler.max.memory" value="128m"/>
    <patternset id="ignored.files">
        <exclude name="**/CVS/**"/>
        <exclude name="**/SCCS/**"/>
        <exclude name="**/RCS/**"/>
        <exclude name="**/rcs/**"/>
        <exclude name="**/.DS_Store/**"/>
        <exclude name="**/.svn/**"/>
        <exclude name="**/.pyc/**"/>
        <exclude name="**/.pyo/**"/>
        <exclude name="**/*.pyc/**"/>
        <exclude name="**/*.pyo/**"/>
        <exclude name="**/.git/**"/>
        <exclude name="**/*.hprof/**"/>
        <exclude name="**/_svn/**"/>
        <exclude name="**/.hg/**"/>
        <exclude name="**/*.lib/**"/>
        <exclude name="**/*~/**"/>
        <exclude name="**/__pycache__/**"/>
        <exclude name="**/.bundle/**"/>
        <exclude name="**/*.rbc/**"/>
        <exclude name="**/vssver.scc/**"/>
        <exclude name="**/vssver2.scc/**"/>
    </patternset>
    <patternset id="library.patterns">
        <include name="*.war"/>
        <include name="*.ear"/>
        <include name="*.apk"/>
        <include name="*.zip"/>
        <include name="*.swc"/>
        <include name="*.ane"/>
        <include name="*.egg"/>
        <include name="*.jar"/>
    </patternset>
    <patternset id="compiler.resources">
        <include name="**/?*.properties"/>
        <include name="**/?*.xml"/>
        <include name="**/?*.gif"/>
        <include name="**/?*.png"/>
        <include name="**/?*.jpeg"/>
        <include name="**/?*.jpg"/>
        <include name="**/?*.html"/>
        <include name="**/?*.dtd"/>
        <include name="**/?*.tld"/>
        <include name="**/?*.ftl"/>
    </patternset>


    <!-- Global Libraries -->

    <path id="library.junit4.classpath">
        <fileset dir="/Users/retokiefer/Dropbox/Development/Libraries/junit4.10">
            <patternset refid="library.patterns"/>
        </fileset>
    </path>

    <!-- Modules -->


    <!-- Module pam -->

    <dirname property="module.pam.basedir" file="${ant.file}"/>


    <property name="compiler.args.pam" value="${compiler.args}"/>

    <property name="pam.output.dir" value="${module.pam.basedir}/out/production/pam"/>
    <property name="pam.testoutput.dir" value="${module.pam.basedir}/out/test/pam"/>

    <path id="pam.module.bootclasspath">
        <path refid="library.junit4.classpath"/>
    </path>

    <path id="pam.module.production.classpath">
        <path refid="library.junit4.classpath"/>
    </path>

    <path id="pam.runtime.production.module.classpath">
        <pathelement location="${pam.output.dir}"/>
        <path refid="library.junit4.classpath"/>
    </path>

    <path id="pam.module.classpath">
        <pathelement location="${pam.output.dir}"/>
        <path refid="library.junit4.classpath"/>
    </path>

    <path id="pam.runtime.module.classpath">
        <pathelement location="${pam.testoutput.dir}"/>
        <pathelement location="${pam.output.dir}"/>
        <path refid="library.junit4.classpath"/>
    </path>


    <patternset id="excluded.from.module.pam">
        <patternset refid="ignored.files"/>
    </patternset>

    <patternset id="excluded.from.compilation.pam">
        <patternset refid="excluded.from.module.pam"/>
    </patternset>

    <path id="pam.module.sourcepath">
        <dirset dir="${module.pam.basedir}">
            <include name="src"/>
        </dirset>
    </path>

    <path id="pam.module.test.sourcepath">
        <dirset dir="${module.pam.basedir}">
            <include name="tests"/>
        </dirset>
    </path>

     <target name="compile.module.pam" depends="compile.module.pam.production,compile.module.pam.tests"
            description="Compile module pam"/>

    <target name="compile.module.pam.production" description="Compile module pam; production classes">
        <mkdir dir="${pam.output.dir}"/>
        <javac destdir="${pam.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}"
               memorymaximumsize="${compiler.max.memory}" fork="true">
            <compilerarg line="${compiler.args.pam}"/>
            <bootclasspath refid="pam.module.bootclasspath"/>
            <classpath refid="pam.module.production.classpath"/>
            <src refid="pam.module.sourcepath"/>
            <patternset refid="excluded.from.compilation.pam"/>
        </javac>

        <copy todir="${pam.output.dir}">
            <fileset dir="${module.pam.basedir}/src">
                <patternset refid="compiler.resources"/>
                <type type="file"/>
            </fileset>
        </copy>
    </target>

    <target name="compile.module.pam.tests" depends="compile.module.pam.production"
            description="compile module pam; test classes" unless="skip.tests">
        <mkdir dir="${pam.testoutput.dir}"/>
        <javac destdir="${pam.testoutput.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}"
               memorymaximumsize="${compiler.max.memory}" fork="true">
            <compilerarg line="${compiler.args.pam}"/>
            <bootclasspath refid="pam.module.bootclasspath"/>
            <classpath refid="pam.module.classpath"/>
            <src refid="pam.module.test.sourcepath"/>
            <patternset refid="excluded.from.compilation.pam"/>
        </javac>

        <copy todir="${pam.testoutput.dir}">
            <fileset dir="${module.pam.basedir}/tests">
                <patternset refid="compiler.resources"/>
                <type type="file"/>
            </fileset>
        </copy>
    </target>

    <target name="clean.module.pam" description="cleanup module">
        <delete dir="${pam.output.dir}"/>
        <delete dir="${pam.testoutput.dir}"/>
    </target>

    <target name="init" description="Build initialization">
        <!-- Perform any build initialization in this target -->
    </target>

    <target name="clean" depends="clean.module.pam" description="cleanup all"/>

    <target name="build.modules" depends="init, clean, compile.module.pam" description="build all modules"/>

    <target name="all" depends="build.modules" description="build all"/>

    <target name="junit-test" description="run all junit tests" depends="compile.module.pam">
        <!-- Debug output
                <property name="test.class.path" refid="test.class.path"/>
                <echo message="${test.class.path}"/>
        -->
        <junit printsummary="yes" haltonfailure="no">
            <classpath refid="pam.module.classpath"/>
            <formatter type="xml"/>
            <batchtest fork="yes" todir="${pam.output.dir}">
                <fileset dir="${module.pam.basedir}/tests">
                    <include name="**/*Test.java"/>
                </fileset>
            </batchtest>
        </junit>
        <junitreport todir="${pam.output.dir}">
            <fileset dir="${pam.output.dir}">
                <include name="TEST-*.xml"/>
            </fileset>
            <report todir="${pam.testoutput.dir}" format="frames"/>
        </junitreport>
    </target>
</project>